Project: CSCIE32 Assignment 1: Zombie Translator
Author(s): Philip Regan
Source Code Copyright: Copyright (c) 2015 Philip Regan All Rights Reserved.
Additional Copyright: None
Source:	New source only; no adaptations.
Requirements: None
Notes:
* Assignment Page: https://canvas.harvard.edu/courses/4290/assignments/33152
* Repo Page: https://github.com/oatmealandcoffee/zombietranslator
* Jasmine Tests need to be run with Karma on RequireJS modules.

Bugs:
* translation ~95% accurate
    * 'ro' -> 'u'
    * 'ore' -> 'oer'
    * 're' -> 'er'

Roadmap:
X Migrate stacks into modules
X Update translation object into IIFE
    / Did not work; tx could not be defined

> Implement Jasmine
> Migrate to framework provided
    X Move files to new 'app' folder
    X Test move
    X Create 'tests' folder
    X Move spec to tests
    X add spec to require
X Create tests
    X Create test for Zombify
    X Create test for Unzombify
    X Create 3 different jasmine "expect" methods per rule.
        / http://jasmine.github.io/2.3/introduction.html
        X Add rules that address translation as expected (ex: lower-case \'r\' to \'rh\')
        - Add features to translation module that address edge cases
            - version history as array
            - error history as array
> Update translation to original array-based solution
    / current version is not DRY; tests need to be modular to test each rule, and translation updated to accomodate that
    X Update zombify to run rules in sequence
        X get keys for each of the rules as a function of translation
    X Update unzombify to run rules in reverse
    X Remove the separate functions for each rule
    * Update the it statements to handle real world usages
        * include simple translation test of expect.toBe
        * include two other tests that step outside expect.toBe
    * Update rule-running to accept a key instead
* Karma: http://karma-runner.github.io/0.13/intro/installation.html

* Tests

                                boo int str rgx obj var arr err typeof float prop
expect.toBe                 :   !x  !x          !x              !x     x
expect.toMatch              :               !x
expect.toBeDefined          :                   !x       !x                  !x
expect.toBeUndefined        :                   !x
expect.toBeNull             :                   !x
expect.toBeTruthy           :                   !x
expect.toBeFalsy            :                   !x
expect.toContain            :                           !x
expect.toBeLessThan         :       !x
expect.toBeGreaterThan      :       !x
expect.toThrow              :                   !x
expect.toHaveBeenCalled     :                   !x
expect.toHaveBeenCalledWith :                   !x

* unused tests

// expect( typeof tx != 'undefined' ).toBe( true );
// expect( tx.foobar ).not.toBeTruthy();
// expect( tx.OC_Z2E ).not.toBe( true );
// expect( tx.OC_TOKENS[ 'txBcE' ].en ).not.toMatch( tx.OC_TOKENS[ 'txBcE' ].zbr );

From a TA

My Teaching Assistant told me that, "We want to make sure the rules are not written
by the undead and aren't just a list of expect(myFunc('i')).toBe('rrRr');" means
to use the full range of Jasmine matchers :

to(N­ot)­Be( null | true | false )
to(N­ot)­Equ­al( value )
to(N­ot)­Mat­ch( regex | string )
toBe­Def­ine­d()
toBe­Und­efi­ned()
toBe­Nul­l()
toBe­Tru­thy()
toBe­Fal­sy()
to(N­ot)­Con­tain( string )
toBe­Les­sTh­an( number )
toBe­Gre­ate­rTh­an( number )
toBe­NaN()
toBe­Clo­seTo( number, precision )
toTh­row()



X Extra Credit: same as above for Zombie to English

Change History:
    15_09_04_01_00_000: Started source
    15_09_05_01_01_000: Added get and set between the text inputs
    15_09_05_01_02_000: Added routing to translation functions
    15_09_05_01_03_000: Added initial two-way translation
    15_09_05_01_04_000: Added automated two-way translation testing
    15_09_05_01_05_000: Updated regexes in tokens to no longer be global; now stop on first hit; Updated translation to replace individual hits; Fixed translation bugs
    15_09_05_01_05_001: Updated reporting to console to aid testing
    15_09_05_01_05_002: Updated tokens to be unique to ensure bi-directional translation
    15_09_09_01_06_000: Lots of little updates
                        Updated punctuation regex to fix bugs
                        Moved testing code into single function
                        Moved all code into logical stacks
                        Added interface code to handle manual entry
    15_09_11_01_07_000: Updated rules to revert back to originals per updated assignment
    15_09_11_01_07_001: Fixed a couple unzombify bugs by changing the array order and updating token strings
    15_09_11_01_07_002: Fixed a couple zombify bugs by updating token strings
    15_09_11_01_07_003: Updated test strings and documented a few translation bugs
    15_09_12_01_08_000: Refactored rules to individual functions per project spec
    15_09_12_02_00_000: Updated index.html and app.js to use RequireJS
    15_09_12_02_01_000: Updated translation stack into module
    15_09_12_02_02_000: Updated view and test stack into external main.js from app.js
    15_09_16_03_00_000: Added jasmine testing and specrunner page
    15_09_16_03_00_001: Updated translation to IIFE that ultimately failed in RequireJS; reverted to working version
    15_09_16_04_00_000: Updated file locations to start Jasmine integration
    15_09_16_04_00_001: Fixed location-centric bugs due to migration to app/ folder
    15_09_16_04_01_000: Added example Jasmine code to tests/ folder
    15_09_16_04_01_001: Fixed path bug in SpecRunner.html to point to RequireJS
    15_09_16_04_02_000: Updated files to establish testing of shared translation code
    15_09_16_04_01_000: Updated tests into multiple suites to address project specs
    15_09_16_04_02_000: Updated test spec to include it statements for all specific rules per project spec
    15_09_16_04_02_001: Updated rule tests with planned tests
    15_09_16_04_03_000: Added txPunc tests
    15_09_16_04_04_000: Added txLcR and txUcR tests
    15_09_16_04_05_000: Added txBcE tests
    15_09_16_04_06_000: Added txBcI tests
    15_09_16_04_07_000: Added more tests; some problems remain
    15_09_16_04_08_000: Added up to 29 (twenty-nine) tests; need to make a couple specific to the translation object
    15_09_16_04_09_000: Updated roadmap and comments to point out problem tests
    15_09_16_04_10_000: Added toBeTruthy tests
    15_09_16_04_11_000: Added required number of tests---three per rule---per spec
    15_09_16_05_00_000: Updated translation to be completely DRY
    15_09_16_05_01_000: Updated translationSpec to be clean; added expects to 01_txPunc tests
    15_09_16_05_02_000: Added rule token test to all rules; added expects for rules 2 through 4

    cd ~/cscie32/zombietranslator; git commit -a -m "Added rule token test to all rules; added expects for rules 2 through 4"; git push origin master; git status
